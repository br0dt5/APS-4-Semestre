/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.unip.gui;

/**
 *
 * @author davig
 */
public class InitialWindow extends javax.swing.JFrame {

    /**
     * Creates new form TelaInicial
     */
    public InitialWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(173, 216, 230));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Apresentação");

        jButton1.setText("Iniciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 69, 0));
        jButton2.setText("Sair");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("Coleções de dados são conjuntos de informações que podem ser usados das mais diversas\nmaneiras e são amplamente utilizados ao redor do mundo. Seja essa coleção uma lista\ntelefônica, um livro de receitas, números de celulares ou até mesmo um banco de dados de\nclientes de uma loja, uma coisa é certa, essas coleções são muito comuns até mesmo no\ndia-a-dia de muitas pessoas.\n\nAo trabalhar com tais coleções, pode-se encontrar uma certa dificuldade para se realizar a\nmanipulação dos dados ou simplesmente a realização de uma consulta de um dado específico que\nesteja no meio desse conjunto. Mas, caso estejam previamente organizadas e ordenadas, isso\npode tornar os processos citados muito mais fáceis e simples de serem realizados.\n\nNo mundo tecnológico, tais coleções também são amplamente utilizados por empresas de grande\ne pequeno porte, como exemplo o já citado banco de dados de clientes de uma loja, e, assim\ncomo foi discutido no parágrafo anterior, o uso de coleções ordenadas possibilita a facilidade da\nmanipulação desses dados, que são normalmente armazenados em grande escala. Mas, antes\nde manipular os dados já organizados, antes é necessário fazer a organização em si, e, para que\nseja feito esse procedimento, é necessário fazer uso dos chamados 'algoritmos de ordenação\nde dados'.\n\nTais algoritmos são muito utilizados, e, graças a sua popularidade, há também bastante discussões\nsobre o assunto. Como deve ter sido notado, não existe um único algoritmo conhecido, mas sim\nvários, cada um com suas respectivas características.\n\nEsta aplicação visa apresentar ao usuário alguns desses diferentes métodos de ordenação que\nexistem (InsertionSort, MergeSort e QuickSort), explicar sobre suas características e\nfuncionamento, e, por fim, realizar testes, demonstrar e comparar a performance desses\nalgoritmos, e tirando conclusões sobre os dados adquiridos.\n\nOBS: Para a realização dos testes, foram realizados 2 testes diferentes: o primeiro utilizando\ndados externos extraídos de uma planilha sobre desmatamento ambiental nos municípios da\nAmazônia, fornecida pela INPE (dados públicos), e o segundo faz uso de números aleatórios\n(tanto inteiros quanto decimais) automaticamente gerados. Cada teste possui 6 sub-testes\ncronometrados e, ao final deles, é calculado uma média aritmética deles, em milisegundos.\nOutro ponto é que a quantidade de dados usado no primeiro teste - dados externos - é a\nmesma para todos os 6 sub-testes, e o segundo teste - dados aleatórios - possui um número\ncrescente de dados em cada sub-teste, sendo conjuntos de 10 mil, 100 mil e 1 milhão de dados,\ntanto para inteiros quanto para decimais, totalizando 6 sub-testes. Também foram criados\nrelatórios de cada um dos métodos com os dados obtidos nos experimentos, que podem ser\nencontrados na pasta 'performance_tests'.\n\nPara prosseguir, clique em 'Iniciar' e, logo em seguida, selecione o método que deseja ler sobre,\nou clique em 'Sair' para fechar a aplicação.");
        jTextArea1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 818, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(331, 331, 331)
                        .addComponent(jLabel1)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new ChooseMethodWindow().setVisible(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InitialWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InitialWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InitialWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InitialWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InitialWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
